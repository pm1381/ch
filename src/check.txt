        //ELEQUENT :
        // $users = DB::table('users')->count();
        // $price = DB::table('orders')->max('price');

        // $orders = DB::table('orders')
        // ->selectRaw('price * ? as price_with_tax', [1.0825])
        // ->get();

        // $orders = DB::table('orders')
        // ->select('department', DB::raw('SUM(price) as total_sales'))
        // ->groupBy('department')
        // ->havingRaw('SUM(price) > ?', [2500])
        // ->get();

        // $users = DB::table('users')
        // ->leftJoin('posts', 'users.id', '=', 'posts.user_id')
        // ->get();


        // $users = DB::table('users')->where([
        // ['status', '=', '1'],
        // ['subscribed', '<>', '1'],
        // ])->get();

        // $users = DB::table('users')
        // ->where('votes', '>', 100)
        // ->orWhere(function($query) {
        //     $query->where('name', 'Abigail')
        //             ->where('votes', '>', 50);
        // })
        // ->get();   ---> x or (y and z)

        // $products = DB::table('products')
        // ->whereNot(function ($query) {
        //     $query->where('clearance', true)
        //             ->orWhere('price', '<', 10);
        // })
        // ->get();

        // $users = DB::table('users')
        // ->whereDate('created_at', '2016-12-31')
        // ->get();

        // $report = DB::table('orders')
        // ->selectRaw('count(id) as number_of_orders, customer_id')
        // ->groupBy('customer_id')
        // ->havingBetween('number_of_orders', [5, 15])
        // ->get();

        // $users = DB::table('users')->skip(10)->take(5)->get();


        // DB::table('users')->insert([
        //     ['email' => 'picard@example.com', 'votes' => 0],
        //     ['email' => 'janeway@example.com', 'votes' => 0],
        // ]);

        // DB::table('users')
        //     ->updateOrInsert(
        //         ['email' => 'john@example.com', 'name' => 'John'],
        //         ['votes' => '2']
        //     );

        // DB::table('users')->increment('votes', 1, ['name' => 'John']);

        // DB::table('users')->where('votes', '>', 100)->dd(); --> to see your sql

        // from now on we will have elequent :
 
        // Flight::chunk(200, function ($flights) {
        //     foreach ($flights as $flight) {
        //         //
        //     }
        // });

        // $flight = Flight::updateOrCreate(
        //     ['departure' => 'Oakland', 'destination' => 'San Diego'],
        //     ['price' => 99, 'discounted' => 1]
        // );

        // use App\Models\Address;
        // $shipping = Address::create([
        //     'type' => 'shipping',
        //     'line_1' => '123 Example Street',
        //     'city' => 'Victorville',
        //     'state' => 'CA',
        //     'postcode' => '90001',
        // ]);
        
        // $billing = $shipping->replicate()->fill([
        //     'type' => 'billing'
        // ]);
        
        // $billing->save();

    //     $flight = Flight::create([
    //     'destination' => 'LAX',
    //     'origin' => 'LHR',
    //     'last_flown' => '2020-03-04 11:00:00',
    //     'last_pilot_id' => 747,
    // ]);
    // $flight = $flight->replicate([
    //     'last_flown',
    //     'last_pilot_id'
    // ]);


    //ROUTING : 

    Route::redirect('/here', '/there', 301);

    You may type-hint any dependencies required by your route in your route's callback signature. The declared dependencies will automatically be resolved and injected into the callback by the Laravel service container

    Route::get('/user', [UserController::class, 'index']);

    Route::get('/user/{name?}', function ($name = 'John') {
        return $name;
    });

    Route::get('/user/{id}/{name}', function ($id, $name) {
        //
    })->where(['id' => '[0-9]+', 'name' => '[a-z]+']);

    Route::get('/user/{id}/profile', function ($id) {
        //
    })->name('profile');
    
    $url = route('profile', ['id' => 1, 'photos' => 'yes']);

    <form action="/example" method="POST">
        @method('PUT')
        @csrf
    </form>

    $route = Route::current(); // Illuminate\Routing\Route
    $name = Route::currentRouteName(); // string
    $action = Route::currentRouteAction(); // string

    php artisan route:cache --> increase speed of loading routes 

    <?php
    namespace App\Http\Middleware;
    use Closure;
    class BeforeMiddleware
    {
        public function handle($request, Closure $next)
        {
            //BEFORE MIDDLEWARE:
            //Perform action
            return $next($request);

            //AFTER MIDDLEWARE:
            //$response = $next($request)
            //perform action
            //return $response;
        }
    }
    then u need to assign Middleware t0 kernel.php $middlewareRoute prperty and after than u can
    add this to your route

    as the third parametr, you can add eveeery parametr you want to your request.

    Route::put('/post/{id}', function ($id) {
        //
    })->middleware('role:editor'); // in here editor is the parametr (3rd) and role is middleware name which is defined in kernel.php 

    //Controllers :

    Route::resource('photos', PhotoController::class)
    ->missing(function (Request $request) {
        return Redirect::route('photos.index');
    });   ---> for handeling 404
